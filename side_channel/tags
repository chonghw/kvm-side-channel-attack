!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDRESS	multi_process_covert_channel/receiver.c	4;"	d	file:
CACHELINE_SIZE	include/mem.h	5;"	d
CC	multi_process_covert_channel/makefile	/^CC=gcc$/;"	m
CFLAGS	Rule.mak	/^CFLAGS= -I. -I$(INCLUDE) -I$(LIBINCLUDE)$/;"	m
CP	one_process_covert_channel/makefile	/^CP=g++$/;"	m
DIR	makefile	/^DIR= one_process_covert_channel multi_process_covert_channel$/;"	m
DIR	test/makefile	/^DIR=src1 src2$/;"	m
INCLUDE	Rule.mak	/^INCLUDE= $(TOP_DIR)\/include$/;"	m
INCLUDE_SOURCE	Rule.mak	/^INCLUDE_SOURCE=$/;"	m
ISFOLDER	multi_process_covert_channel/makefile	/^ISFOLDER=$(wildcard $(RESULT_PATH))$/;"	m
ISFOLDER	one_process_covert_channel/makefile	/^ISFOLDER=$(wildcard $(RESULT_PATH))$/;"	m
L3_CACHE_SIZE	include/mem.h	4;"	d
LIBINCLUDE	Rule.mak	/^LIBINCLUDE=$(TOP_DIR)\/lib_src$/;"	m
LOOP	one_process_covert_channel/clflushtest.c	5;"	d	file:
MAIN_SOURCE	multi_process_covert_channel/makefile	/^MAIN_SOURCE=sender receiver$/;"	m
MAIN_SOURCE	one_process_covert_channel/makefile	/^MAIN_SOURCE=clflushtest.c$/;"	m
RESULT_PATH	multi_process_covert_channel/makefile	/^RESULT_PATH=.\/result$/;"	m
RESULT_PATH	one_process_covert_channel/makefile	/^RESULT_PATH=.\/result$/;"	m
T	test/makefile	/^T=$(wildcard .\/src1)$/;"	m
TIMESLOT	multi_process_covert_channel/sender.c	6;"	d	file:
TOP_DIR	Rule.mak	/^TOP_DIR= \/home\/sec\/kvm-side-channel-attack\/side_channel$/;"	m
address	multi_process_covert_channel/receiver.c	/^	ADDRESS address;$/;"	m	struct:candidate	file:
candidate	multi_process_covert_channel/receiver.c	/^typedef struct candidate$/;"	s	file:
candidate	multi_process_covert_channel/receiver.c	/^}candidate;$/;"	t	typeref:struct:candidate	file:
clflush	include/mem.c	/^void clflush(volatile void *p,int size)$/;"	f
get_cycle	include/mem.c	/^uint64_t get_cycle()$/;"	f
main	multi_process_covert_channel/receiver.c	/^int main(int argc,char* argv[])$/;"	f
main	multi_process_covert_channel/sender.c	/^int main(int argc, char* argv[])$/;"	f
main	one_process_covert_channel/clflushtest.c	/^int main()$/;"	f
now_time	multi_process_covert_channel/receiver.c	/^	uint64_t now_time;$/;"	m	struct:candidate	file:
prev_time	multi_process_covert_channel/receiver.c	/^	uint64_t prev_time;$/;"	m	struct:candidate	file:
test_case1	one_process_covert_channel/clflushtest.c	/^void test_case1()$/;"	f
test_case2	one_process_covert_channel/clflushtest.c	/^void test_case2()$/;"	f
test_case3	one_process_covert_channel/clflushtest.c	/^void test_case3()$/;"	f
